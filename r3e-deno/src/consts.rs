// Copyright @ 2023 - 2024, R3E Network
// All Rights Reserved

use std::collections::HashSet;

use deno_core::OpDecl;

lazy_static::lazy_static! {
    pub static ref ALLOWED_OP_NAMES: HashSet<&'static str> = HashSet::from([
        "op_close",
        "op_try_close",
        "op_print",
        "op_resources",
        // "op_wasm_streaming_feed",
        // "op_wasm_streaming_set_url",
        // "op_void_sync",
        // "op_error_async",
        // "op_error_async_deferred",
        // "op_void_async",
        // "op_void_async_deferred",
        // "op_add",
        // "op_add_async",
        "op_read",
        "op_read_all",
        "op_write",
        "op_read_sync",
        "op_write_sync",
        "op_write_all",
        "op_write_type_error",
        "op_shutdown",
        "op_format_file_name",
        "op_str_byte_length",
        //"op_panic",
        "op_cancel_handle",
        "op_encode_binary_string",
        "op_is_terminal",
        "op_import_sync",
        "op_is_any_array_buffer",
        "op_is_arguments_object",
        "op_is_array_buffer",
        "op_is_array_buffer_view",
        "op_is_async_function",
        "op_is_big_int_object",
        "op_is_boolean_object",
        "op_is_boxed_primitive",
        "op_is_data_view",
        "op_is_date",
        "op_is_generator_function",
        "op_is_generator_object",
        "op_is_map",
        "op_is_map_iterator",
        "op_is_module_namespace_object",
        "op_is_native_error",
        "op_is_number_object",
        "op_is_promise",
        "op_is_proxy",
        "op_is_reg_exp",
        "op_is_set",
        "op_is_set_iterator",
        "op_is_shared_array_buffer",
        "op_is_string_object",
        "op_is_symbol_object",
        "op_is_typed_array",
        "op_is_weak_map",
        "op_is_weak_set",
        "op_add_main_module_handler",
        "op_set_handled_promise_rejection_handler",
        "op_timer_queue",
        "op_timer_queue_system",
        "op_timer_queue_immediate",
        "op_timer_cancel",
        "op_timer_ref",
        "op_timer_unref",
        "op_ref_op",
        "op_unref_op",
        "op_lazy_load_esm",
        "op_run_microtasks",
        "op_has_tick_scheduled",
        "op_set_has_tick_scheduled",
        "op_eval_context",
        "op_queue_microtask",
        "op_encode",
        "op_decode",
        "op_serialize",
        "op_deserialize",
        "op_set_promise_hooks",
        "op_get_promise_details",
        "op_get_proxy_details",
        "op_get_non_index_property_names",
        "op_get_constructor_name",
        "op_get_extras_binding_object",
        "op_memory_usage",
        // "op_set_wasm_streaming_callback",
        // "op_abort_wasm_streaming",
        "op_destructure_error",
        "op_dispatch_exception",
        // "op_op_names",
        // "op_current_user_call_site",
        "op_set_format_exception_callback",
        "op_event_loop_has_more_work",
        "op_leak_tracing_enable",
        "op_leak_tracing_submit",
        "op_leak_tracing_get_all",
        "op_leak_tracing_get",
        "op_defer",
    ]);
}

pub(crate) fn op_allowed(op: OpDecl) -> OpDecl {
    if ALLOWED_OP_NAMES.contains(&op.name) {
        op
    } else {
        op.disable()
    }
}
