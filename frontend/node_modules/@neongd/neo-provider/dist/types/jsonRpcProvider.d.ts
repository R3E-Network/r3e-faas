import { JsonRpcTransport } from '@neongd/json-rpc';
import { Provider, ProviderMessage, ProviderRpcError, RequestArguments } from './types';
export * from './types';
export declare class JsonRpcProvider implements Provider {
    private transport;
    private events;
    constructor(transport: JsonRpcTransport);
    on(event: 'connect', listener: () => void): void;
    on(event: 'disconnect', listener: (error: ProviderRpcError) => void): void;
    on(event: 'message', listener: (message: ProviderMessage) => void): void;
    on(event: 'networkChanged', listener: (network: string) => void): void;
    on(event: 'accountChanged', listener: (account: string) => void): void;
    removeListener(event: string, listener: any): void;
    request<R = any, P = any>(args: RequestArguments<P>): Promise<R>;
    private registerEventListeners;
    private onNotification;
}
