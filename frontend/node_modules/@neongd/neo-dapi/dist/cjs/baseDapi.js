"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseDapi = void 0;
const enums_1 = require("./enums");
class BaseDapi {
    constructor(provider) {
        this.provider = provider;
    }
    getProvider() {
        return this.provider.request({ method: enums_1.MethodName.GetProvider });
    }
    getNetworks() {
        return this.provider.request({ method: enums_1.MethodName.GetNetworks });
    }
    getAccount() {
        return this.provider.request({ method: enums_1.MethodName.GetAccount });
    }
    getBlockCount(params) {
        return this.provider.request({ method: enums_1.MethodName.GetBlockCount, params });
    }
    getBlock(params) {
        return this.provider.request({ method: enums_1.MethodName.GetBlock, params });
    }
    getTransaction(params) {
        return this.provider.request({ method: enums_1.MethodName.GetTransaction, params });
    }
    getApplicationLog(params) {
        return this.provider.request({ method: enums_1.MethodName.GetApplicationLog, params });
    }
    getStorage(params) {
        return this.provider.request({ method: enums_1.MethodName.GetStorage, params });
    }
    getNep17Balances(params) {
        return this.provider.request({ method: enums_1.MethodName.GetNep17Balances, params });
    }
    invokeRead(params) {
        return this.provider.request({ method: enums_1.MethodName.InvokeRead, params });
    }
    invokeReadMulti(params) {
        return this.provider.request({ method: enums_1.MethodName.InvokeReadMulti, params });
    }
    invoke(params) {
        return this.provider.request({ method: enums_1.MethodName.Invoke, params });
    }
    invokeMulti(params) {
        return this.provider.request({ method: enums_1.MethodName.InvokeMulti, params });
    }
    signMessage(params) {
        return this.provider.request({ method: enums_1.MethodName.SignMessage, params });
    }
    signMessageWithoutSalt(params) {
        return this.provider.request({ method: enums_1.MethodName.SignMessageWithoutSalt, params });
    }
    signTransaction(params) {
        return this.provider.request({ method: enums_1.MethodName.SignTransaction, params });
    }
    relayTransaction(params) {
        return this.provider.request({ method: enums_1.MethodName.RelayTransaction, params });
    }
}
exports.BaseDapi = BaseDapi;
//# sourceMappingURL=baseDapi.js.map