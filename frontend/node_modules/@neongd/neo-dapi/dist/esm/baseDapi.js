import { MethodName } from './enums';
export class BaseDapi {
    constructor(provider) {
        this.provider = provider;
    }
    getProvider() {
        return this.provider.request({ method: MethodName.GetProvider });
    }
    getNetworks() {
        return this.provider.request({ method: MethodName.GetNetworks });
    }
    getAccount() {
        return this.provider.request({ method: MethodName.GetAccount });
    }
    getBlockCount(params) {
        return this.provider.request({ method: MethodName.GetBlockCount, params });
    }
    getBlock(params) {
        return this.provider.request({ method: MethodName.GetBlock, params });
    }
    getTransaction(params) {
        return this.provider.request({ method: MethodName.GetTransaction, params });
    }
    getApplicationLog(params) {
        return this.provider.request({ method: MethodName.GetApplicationLog, params });
    }
    getStorage(params) {
        return this.provider.request({ method: MethodName.GetStorage, params });
    }
    getNep17Balances(params) {
        return this.provider.request({ method: MethodName.GetNep17Balances, params });
    }
    invokeRead(params) {
        return this.provider.request({ method: MethodName.InvokeRead, params });
    }
    invokeReadMulti(params) {
        return this.provider.request({ method: MethodName.InvokeReadMulti, params });
    }
    invoke(params) {
        return this.provider.request({ method: MethodName.Invoke, params });
    }
    invokeMulti(params) {
        return this.provider.request({ method: MethodName.InvokeMulti, params });
    }
    signMessage(params) {
        return this.provider.request({ method: MethodName.SignMessage, params });
    }
    signMessageWithoutSalt(params) {
        return this.provider.request({ method: MethodName.SignMessageWithoutSalt, params });
    }
    signTransaction(params) {
        return this.provider.request({ method: MethodName.SignTransaction, params });
    }
    relayTransaction(params) {
        return this.provider.request({ method: MethodName.RelayTransaction, params });
    }
}
//# sourceMappingURL=baseDapi.js.map