import { ErrorResponse, JsonRpcConnection, JsonRpcTransport, RequestArguments } from './types';
export declare class BaseJsonRpcTransport implements JsonRpcTransport {
    connection: JsonRpcConnection;
    private events;
    constructor(connection: string | JsonRpcConnection);
    connect(connection?: JsonRpcConnection | string): Promise<void>;
    disconnect(): Promise<void>;
    on(event: string, listener: any): void;
    removeListener(event: string, listener: any): void;
    request<Result = any, Params = any>(args: RequestArguments<Params>, context?: any): Promise<Result>;
    notify<Params = any>(args: RequestArguments<Params>, context?: any): Promise<void>;
    resolve<Result = any>(id: number, result: Result, context?: any): Promise<void>;
    reject(id: number, error: ErrorResponse, context?: any): Promise<void>;
    private parseConnection;
    private requestStrict;
    private notifyStrict;
    private respondStrict;
    private onConnectionPayload;
    private onConnectionClose;
    private onConnectionError;
    private open;
    private close;
}
