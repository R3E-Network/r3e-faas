import { BaseWalletAdapter, ContractReadInvocation, ContractReadInvocationMulti, ContractReadInvocationResult, ContractWriteInvocation, ContractWriteInvocationMulti, ContractWriteInvocationResult, GetNetworksInvocationResult, SignMessageInvocation, SignMessageInvocationResult } from '@rentfuse-labs/neo-wallet-adapter-base';
export interface OneGateWalletAdapterConfig {
    options: any;
    pollInterval?: number;
    pollCount?: number;
}
export declare class OneGateWalletAdapter extends BaseWalletAdapter {
    private _address;
    private _connecting;
    private _options;
    private _oneGateDapi;
    private _oneGateProvider;
    constructor(config?: OneGateWalletAdapterConfig);
    get address(): string | null;
    get ready(): boolean;
    get connecting(): boolean;
    get connected(): boolean;
    connect(): Promise<void>;
    disconnect(): Promise<void>;
    invokeRead(request: ContractReadInvocation): Promise<ContractReadInvocationResult>;
    invokeReadMulti(request: ContractReadInvocationMulti): Promise<ContractReadInvocationResult>;
    invoke(request: ContractWriteInvocation): Promise<ContractWriteInvocationResult>;
    invokeMulti(request: ContractWriteInvocationMulti): Promise<ContractWriteInvocationResult>;
    getNetworks(): Promise<GetNetworksInvocationResult>;
    signMessage(request: SignMessageInvocation): Promise<SignMessageInvocationResult>;
    private _responseToReadResult;
    private _responseToWriteResult;
    private _responseToGetNetworksResult;
    private _normalizeSigner;
    private _disconnected;
}
